[tool.poetry]
name = "logo-design-backend"
version = "0.1.0"
description = ""
authors = ["taewoo-dev <twin9774@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12.0"
fastapi = {extras = ["standard"], version = "^0.115.6"}
sqlalchemy = {extras = ["asyncio"], version = "^2.0.38"}
asyncmy = "^0.2.10"
pydantic-settings = "^2.7.1"
sqlalchemy-utils = "^0.41.2"
cryptography = "^44.0.0"
pytest-asyncio = "^0.25.2"
httpx = "^0.27.2"
orjson = "^3.10.14"
pyjwt = "^2.10.1"
passlib = "^1.7.4"
gunicorn = "^23.0.0"
bcrypt = "^4.2.1"
openpyxl = "^3.1.5"
pymysql = "^1.1.1"
alembic = "^1.15.1"

[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
mypy = "^1.14.1"
ruff = "^0.8.6"
coverage = "^7.6.10"
pytest = "^8.3.4"
pytest-asyncio = "^0.25.2"
types-passlib = "^1.7.7.20241221"
time-machine = "^2.16.0"
types-openpyxl = "^3.1.5.20241225"

[tool.mypy]
python_version = "3.12"
strict = true
plugins = [
    "pydantic.mypy",
    "sqlalchemy.ext.mypy.plugin"
]
exclude = "migrations"

[tool.black]
line-length = 120

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["E", "F", "W", "I"]
ignore = [
    "E501", # Line too long
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
concurrency = ["greenlet"]
source = ["app"]


[tool.coverage.report]
fail_under = 92